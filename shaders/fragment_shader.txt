# version 330 core
in vec3 normal;
in vec2 texCoords;
in vec3 FragPos;

out vec4 FragColor;

uniform sampler2D diffuseMap;

uniform vec3 lightPos;
uniform vec3 viewPos;

void main() {
	vec3 color = texture(diffuseMap, texCoords).rbg;

	// ambient
	float ambientStrength = 0.1;
	vec3 ambient = ambientStrength * color;

	//diffuse
	vec3 lightDir = normalize(lightPos - FragPos);
	float diff = max(dot(normal, lightDir), 0.0);
	vec3 diffuse = diff * color;

	vec3 result = color + diffuse;
	FragColor = vec4(diffuse, 1.0);
}